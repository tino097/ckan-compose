---
  ahoyapi: v2
  
  commands:
    up:
      usage: Build and start project.
      cmd: |
        docker-compose up -d "$@"

    stop:
      usage: Stops the project
      cmd: |
        docker-compose stop "$@"
  
    down:
      usage: Delete project (CAUTION).
      cmd: |
        if [ "$1" == "y" ]; then
          docker-compose down --volumes
        else
          ahoy confirm "Running this command will destroy your current site, database and build? Are you sure you didn't mean ahoy stop?" &&
          # Run this if confirm returns true
          docker-compose down --volumes ||
          # Run this if confirm returns false
          echo "OK, probably a wise choice..."
        fi
  
    build:
      usage: Build project.
      cmd: |
        docker-compose up -d --build "$@"

    cli:
      usage: Start a shell inside a container.
      cmd: docker-compose exec "$@" sh
    ps:
      usage: Check processes running inside the container.
      cmd: docker-compose ps
    logs:
      usage: View logs.
      cmd: docker-compose logs "$@"
    restart:
      usage: Restart the project.
      cmd: docker-compose restart "$@"

    generate-env:
      usage: Generate a .env file with values entered via prompt.
      cmd: |
        echo "Generating .env file..."
        if [ -f ".env" ]; then
          echo ".env file already exists. Skipping..."
        else
          read -p "Enter value for PROJECT_NAME: " project_name
          read -p "Enter value for DATASTORE_READONLY_PASSWORD (leave blank for 'pass'): " datastore_readonly_password
          read -p "Enter value for POSTGRES_PASSWORD (leave blank for 'pass'): " postgres_password
          
          # Check for blank values and assign default if necessary
          [ -z "$datastore_readonly_password" ] && datastore_readonly_password="pass"
          [ -z "$postgres_password" ] && postgres_password="pass"

          echo "PROJECT_NAME=$project_name" > .env
          echo "DATASTORE_READONLY_PASSWORD=$datastore_readonly_password" >> .env
          echo "POSTGRES_PASSWORD=$postgres_password" >> .env

          echo ".env file has been created!"
        fi
      